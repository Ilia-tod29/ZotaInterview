package util

import (
	"crypto/rand"
	"crypto/sha256"
	"encoding/hex"
)

var alphabet = []rune("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ")

func GenerateNonce(length int) string {
	randBytes := make([]byte, length)
	_, err := rand.Read(randBytes)
	if err != nil {
		panic(err)
	}

	// The random nonce is generated by taking ~6 bits from each of the
	// generated random bytes.
	alphabetSize := byte(len(alphabet))
	nonce := make([]rune, length)
	for i := 0; i < length; i++ {
		nonce[i] = alphabet[randBytes[i]%alphabetSize]
	}

	return string(nonce)
}

func GenerateSignature(str string) string {
	hash := sha256.New()
	hash.Write([]byte(str))
	sig := hash.Sum(nil)

	return hex.EncodeToString(sig)
}
